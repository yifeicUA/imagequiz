{"version":3,"sources":["components/flowers.js","components/Home.js","components/Signup.js","components/Login.js","components/Menu.js","components/data.js","components/question.js","App.js","reportWebVitals.js","index.js"],"names":["flowers","name","picture","Home","props","useState","history","index","setNumber","useHistory","send","event","preventDefault","getIndex","target","push","curr","i","length","Card","Link","href","value","onClick","Img","variant","src","Body","Title","Signin","Form","Group","className","controlId","Label","Control","type","placeholder","Text","Check","label","Button","Login","Header","Footer","Menu","Navbar","defaultActiveKey","bg","Container","Nav","Item","Toggle","Collapse","quizzes","questionIndex","questions","choiceIndex","question","choices","answer","generateQuestions","quiz","generateQuizzes","Questions","grade","setGrade","id","getGrade","indexProp","fluid","Row","Col","Image","alt","as","column","sm","Feedback","Alert","gradeProp","size","App","undefined","number","path","Grade","picIndex","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2b8a9e1a.chunk.js","sourcesContent":["let flowers = [\r\n    {\r\n        name: \"Acacia\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/acacia.jpg\"\r\n    },\r\n    {\r\n        name: \"Alyssum\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/alyssum.jpg\"\r\n    },\r\n    {\r\n        name: \"Amaryllis\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/amaryllis.jpg\"\r\n    },\r\n    {\r\n        name: \"Aster\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/aster.jpg\"\r\n    },\r\n    {\r\n        name: \"Azalea\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/azalea.jpg\"\r\n    },\r\n    {\r\n        name: \"Begonia\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/begonia.jpg\"\r\n    },\r\n    {\r\n        name: \"Buttercup\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/buttercup.jpg\"\r\n    },\r\n    {\r\n        name: \"Calluna\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/calluna.jpg\"\r\n    },\r\n    {\r\n        name: \"Camellia\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/camellia.jpg\"\r\n    },\r\n    {\r\n        name: \"Cardinal\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/cardinal.jpg\"\r\n    },\r\n    {\r\n        name: \"Carnation\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/carnation.jpg\"\r\n    },\r\n    {\r\n        name: \"Clover\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/clover.jpg\"\r\n    },\r\n    {\r\n        name: \"Crown Imperial\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/crownimperial.jpg\"\r\n    },\r\n    {\r\n        name: \"Daffodil\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/daffodil.jpg\"\r\n    },\r\n    {\r\n        name: \"Dahlia\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/dahlia.jpg\"\r\n    },\r\n    {\r\n        name: \"Daisy\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/daisy.jpg\"\r\n    },\r\n    {\r\n        name: \"Gladiolus\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/gladiolus.jpg\"\r\n    },\r\n    {\r\n        name: \"Lantana\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/lantana.jpg\"\r\n    },\r\n    {\r\n        name: \"Lily\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/lily.jpg\"\r\n    },\r\n    {\r\n        name: \"Lotus\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/lotus.jpg\"\r\n    },\r\n    {\r\n        name: \"Marigold\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/Marigold.jpg\"\r\n    },\r\n    {\r\n        name: \"Orchid\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/orchid.jpg\"\r\n    },\r\n    {\r\n        name: \"Primrose\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/primrose.jpg\"\r\n    },\r\n    {\r\n        name: \"Sunflower\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/sunflower.jpg\"\r\n    },\r\n    {\r\n        name: \"Tickseed\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/tickseed.jpg\"\r\n    },\r\n    {\r\n        name: \"Tulip\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/tulip.jpg\"\r\n    },\r\n    {\r\n        name: \"Zinnia\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/zinnia.jpg\"\r\n    }\r\n];\r\n\r\nexport default flowers;","//import App from \"../App\";\r\nimport { Container, Row, Col, CardGroup, Card, Alert} from \"react-bootstrap\";\r\nimport flowers from './flowers.js';\r\nimport { useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nconst Home = (props) => {\r\n    const {index, setNumber} = useState(0);\r\n    const history = useHistory();\r\n    let send =(event) =>{\r\n        event.preventDefault();\r\n        //alert(event.target.name);\r\n        props.getIndex(event.target.name);\r\n        history.push('/question')\r\n    }\r\n    let curr = [];\r\n    for(var i=0; i<flowers.length; i++){\r\n        curr.push(<Card >\r\n            <Card.Link href = \"#question\"  value={i} onClick={send}>\r\n            <Card.Img variant=\"top\"  src={flowers[i].picture} name={i} onClick={send}/>\r\n            </Card.Link>\r\n            <Card.Body>\r\n                <Card.Title>{flowers[i].name}</Card.Title>\r\n            </Card.Body>\r\n            </Card>);\r\n    }\r\n    //past.appendChild(curr);\r\n    return (\r\n        (curr)\r\n    );\r\n}\r\nexport default Home;\r\n    /*\r\n    let past = document.createElement('div');;\r\n    \r\n    let numrow = 0;\r\n    for(var i=0; i<flowers.length; i++){\r\n        if(i%4==0){\r\n            past.appendChild(curr);\r\n            curr = document.createElement('Row');\r\n        }\r\n        let pcard =document.createElement('Card');\r\n        let pcardimg = document.createElement('Card.Img');\r\n        pcardimg.setAttribute('variant','top');\r\n        pcardimg.src = flowers[i].picture;\r\n        let pcardbod = document.createElement('Card.Body');\r\n        let pcardtit = document.createElement('Card.Title');\r\n        pcardtit.innerHTML = flowers[i].name;\r\n        pcardbod.appendChild(pcardtit);\r\n        pcard.appendChild(pcardimg);\r\n        pcard.appendChild(pcardbod);\r\n        curr.appendChild(pcard)\r\n        */\r\n        ","//import App from \"../App\";\r\nimport React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Card, Button, Form} from 'react-bootstrap';\r\nconst Signin = () => {\r\n    return (\r\n        <Form>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Email address</Form.Label>\r\n                <Form.Control type=\"email\" placeholder=\"Enter email\" />\r\n                <Form.Text className=\"text-muted\">\r\n                    please enter your email address\r\n                </Form.Text>\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicText\">\r\n                <Form.Label>Phone</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Enter phone number\" />\r\n                <Form.Text className=\"text-muted\">\r\n                    please enter your phone number\r\n                </Form.Text>\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control type=\"password\" placeholder=\"Password\" />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\r\n                <Form.Check type=\"checkbox\" label=\"save account number\" />\r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n            Sign up\r\n            </Button>\r\n        </Form>\r\n    );\r\n}\r\nexport default Signin;\r\n\r\n/*\r\n<Card className=\"text-center\">\r\n            <Card.Header>Sign In</Card.Header>\r\n            <Card.Body>\r\n                <Card.Title>Enter your name</Card.Title>\r\n                <Card.Text>Yifei Chen</Card.Text>\r\n                <Button variant=\"primary\">Sign in</Button>\r\n            </Card.Body>\r\n            <Card.Footer className=\"text-muted\">the name will be your username</Card.Footer>\r\n        </Card>\r\n*/","//import App from \"../App\";\r\nimport React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Card, Button } from 'react-bootstrap';\r\nconst Login = () => {\r\n    return (\r\n        <Card className=\"text-center\">\r\n            <Card.Header>Login</Card.Header>\r\n            <Card.Body>\r\n                <Card.Title>Enter your name</Card.Title>\r\n                <Card.Text>Yifei Chen</Card.Text>\r\n                <Button variant=\"primary\">Login</Button>\r\n            </Card.Body>\r\n            <Card.Footer className=\"text-muted\">you already login as Yifei</Card.Footer>\r\n        </Card>\r\n    );\r\n}\r\nexport default Login;","//import App from \"../App\";\r\nimport { Container, Navbar, Nav } from 'react-bootstrap';\r\nconst Menu = () => {\r\n    return (\r\n        <Navbar variant=\"pills\" defaultActiveKey=\"/\" bg=\"dark\">\r\n            <Container>\r\n                <Nav.Item>\r\n                    <Nav.Link href=\"#/\">Home</Nav.Link>\r\n                </Nav.Item>\r\n                <Navbar.Toggle />\r\n                <Navbar.Collapse className=\"justify-content-end\">\r\n                    <Nav.Item>\r\n                        <Nav.Link href=\"#login\">Login</Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                        <Nav.Link href=\"#sign\">Signup</Nav.Link>\r\n                    </Nav.Item>\r\n                </Navbar.Collapse>\r\n            </Container>\r\n        </Navbar>\r\n    );\r\n}\r\nexport default Menu;","import flowers from './flowers';\r\n\r\nlet generateQuestions = () => {\r\n    let questions = [];\r\n    let choiceIndex = 0;\r\n    for(let i = 0; i < flowers.length; i++) {\r\n        choiceIndex = i;\r\n        if(choiceIndex > (flowers.length - 4)){\r\n           choiceIndex = i - 2;\r\n        }\r\n        let question = {\r\n            picture: flowers[i].picture,\r\n            choices: [flowers[choiceIndex].name, flowers[choiceIndex+1].name, flowers[choiceIndex+2].name],\r\n            answer: flowers[i].name\r\n        };\r\n        questions.push(question);\r\n    }\r\n    return questions;\r\n};\r\n\r\nlet generateQuizzes = () => {\r\n    let quizzes = []; \r\n    let questionIndex = 0;\r\n    let questions = generateQuestions();\r\n    for(let i = 0; i < questions.length; i++){\r\n        questionIndex = i;\r\n        if(questionIndex > (questions.length - 7)) {\r\n            questionIndex = i - 5;\r\n        }\r\n        let quiz = [\r\n            questions[questionIndex], \r\n            questions[questionIndex+1], \r\n            questions[questionIndex+2], \r\n            questions[questionIndex+3], \r\n            questions[questionIndex+4],\r\n            questions[questionIndex+5]\r\n        ];\r\n        quizzes.push(quiz);\r\n    }\r\n    return quizzes;\r\n};\r\n\r\nlet quizzes = generateQuizzes();\r\n\r\n\r\nexport default quizzes;","//import App from \"../App\";\r\nimport React, { useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport quizzes from './data.js';\r\nimport grade from './grade.js';\r\nimport { Alert, Card, Button, Form} from 'react-bootstrap';\r\nimport { Container, Row, Col, CardGroup, Image} from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router\";\r\nconst Questions = (props) => {\r\n        const {grade, setGrade} = useState(0);\r\n        const history = useHistory();\r\n        //alert(props.indexProp);\r\n        //alert(props.gradeProp);\r\n        let send = (event) => {\r\n          //event.preventDefault();\r\n          if(event.target.id==event.target.value){\r\n            props.getGrade(1);\r\n          }else{\r\n            props.getGrade(0);\r\n          }\r\n        }\r\n\r\n        let curr = [];\r\n        for(var i=0; i<quizzes[props.indexProp].length; i++){\r\n                curr.push(<div><Container fluid>\r\n                    <Row \r\n                      className=\"justify-content-center \r\n                                 align-items-center\"\r\n                    >\r\n                      <Col>\r\n                        <Image\r\n                          src= {quizzes[props.indexProp][i].picture}\r\n                          alt={quizzes[props.indexProp][i].answer}\r\n                        />\r\n                      </Col>\r\n                      <Col>\r\n                      <fieldset>\r\n                        <Form>\r\n                        <Form.Group as={Row} className=\"mb-3\">\r\n                        <Form.Label as=\"legend\" column sm={2}>\r\n                        </Form.Label>\r\n                        <Col sm={10}>\r\n                            <Form.Check\r\n                            label={quizzes[props.indexProp][i].choices[0]} type ={'radio'} name=\"group1\" id ={quizzes[props.indexProp][i].choices[0]} value ={quizzes[props.indexProp][i].answer} onClick={send}\r\n                            />\r\n                            <Form.Check\r\n                            label={quizzes[props.indexProp][i].choices[1]} type ={'radio'} name=\"group1\" id ={quizzes[props.indexProp][i].choices[1]} value ={quizzes[props.indexProp][i].answer}  onClick={send}\r\n                            />\r\n                            <Form.Check\r\n\r\n                            label={quizzes[props.indexProp][i].choices[2]} type ={'radio'} name=\"group1\" id ={quizzes[props.indexProp][i].choices[2]} value ={quizzes[props.indexProp][i].answer}  onClick={send}\r\n                            />\r\n                            <Form.Control.Feedback label={quizzes[props.indexProp][i].answer}>You did it!</Form.Control.Feedback>\r\n                        </Col>\r\n                        </Form.Group>\r\n                        </Form>\r\n                    </fieldset>\r\n                      </Col>\r\n                    </Row>\r\n                  </Container></div>);\r\n        }\r\n        //past.appendChild(curr);\r\n        curr.push(<Row><Alert key={\"info\"}>\r\n          Your grade is {props.gradeProp} \r\n        </Alert></Row>);\r\n        curr.push(<Row><Button href=\"/question\" variant=\"primary\" size=\"lg\">\r\n        Reapet same quiz\r\n      </Button>{' '}\r\n      <Button href=\"/\" variant=\"secondary\" size=\"lg\">\r\n        Go Back to do Others\r\n      </Button>{' '}</Row>);\r\n        return (\r\n            (curr)\r\n        );\r\n    }\r\nexport default Questions;\r\n\r\n\r\n\r\n\r\n/*\r\nlet curr = [];\r\n        for(var i=0; i<quizzes.length; i++){\r\n            for(var j=0; j<quizzes[i].length; j++){\r\n                curr.push(<div><Container fluid>\r\n                    <Row \r\n                      className=\"justify-content-center \r\n                                 align-items-center\"\r\n                    >\r\n                      <Col>\r\n                        <Image\r\n                          src= {quizzes[i][j].picture}\r\n                          alt={quizzes[i][j].answer}\r\n                        />\r\n                      </Col>\r\n                      <Col>\r\n                      <fieldset>\r\n                        <Form.Group as={Row} className=\"mb-3\">\r\n                        <Form.Label as=\"legend\" column sm={2}>\r\n                        </Form.Label>\r\n                        <Col sm={10}>\r\n                            <Form.Check\r\n                            label={quizzes[i][j].choices[0]}\r\n                            />\r\n                            <Form.Check\r\n                            label={quizzes[i][j].choices[1]}\r\n                            />\r\n                            <Form.Check\r\n\r\n                            label={quizzes[i][j].choices[2]}\r\n                            />\r\n                        </Col>\r\n                        </Form.Group>\r\n                    </fieldset>\r\n                      </Col>\r\n                    </Row>\r\n                  </Container></div>);\r\n            }\r\n        }\r\n        //past.appendChild(curr);\r\n        \r\n        return (\r\n            (curr)\r\n        );\r\n*/\r\n\r\n/*\r\n    let curr = [];\r\n        for(var i=0; i<quizzes.length; i++){\r\n            for(var j=0; j<quizzes[i].length; j++){\r\n                curr.push(<Card >\r\n                    <Card.Img variant=\"top\"  src={quizzes[i][j].picture}/>\r\n                    <Card.Body>\r\n                        <Card.Title>{quizzes[i][j].answer}</Card.Title>\r\n                    </Card.Body>\r\n                    </Card>);\r\n            }\r\n        }\r\n        //past.appendChild(curr);\r\n        \r\n        return (\r\n            (curr)\r\n        );\r\n*/","//import logo from './logo.svg';\nimport Home from './components/Home';\nimport Signin from './components/Signup';\nimport Login from './components/Login';\nimport Menu from './components/Menu';\nimport Questions from './components/question';\nimport { useState } from 'react';\n//import React from 'react';\nimport {\n  //BrowserRouter as router,\n  HashRouter,\n  Switch,\n  Route,\n  //Link\n}from \"react-router-dom\";\nimport { Container, Row, Col, Alert } from 'react-bootstrap';\n//import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  const [number, setNumber] = useState(undefined);\n  const [grade, setGrade] = useState(0);\n  let index = 0;\n\n  let getnumIndex = (picIndex) => {\n    setNumber(picIndex);\n    \n  }\n  let updateGrade = (Grade) => {\n    setGrade(grade+Grade);\n    //alert(grade);\n    \n  }\n  //alert(number);\n  return (\n    <HashRouter>\n      <Container>\n        <Row>\n          <Col><Menu /></Col>\n        </Row>\n        <Switch>\n          <Route path=\"/sign\">\n            <Signin />\n          </Route>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/question\">\n            <Questions indexProp={number} getGrade={updateGrade} gradeProp = {grade}/>\n          </Route>\n          <Route path=\"/\">\n            <Home getIndex={getnumIndex} />\n          </Route>\n        </Switch>\n\n      </Container>\n    </HashRouter>\n  );\n}\n/*\nfunction Home(){\n  return <h2>Home</h2>\n}\nfunction Signin(){\n  return <h2>Signin</h2>\n}\nfunction Login(){\n  return <h2>Login</h2>\n}\n*/\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}