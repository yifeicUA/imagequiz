{"version":3,"sources":["communication/api.js","components/Home.js","components/Signup.js","components/Login.js","components/Menu.js","components/data.js","components/question.js","App.js","reportWebVitals.js","index.js"],"names":["api","getFlowers","fetch","then","x","y","json","console","log","Home","props","useState","flowers","setFlowers","useEffect","length","catch","e","history","index","setNumber","useHistory","send","event","preventDefault","getIndex","target","name","push","curr","i","Card","Link","href","value","onClick","Img","variant","src","picture","Body","Title","Signin","Form","Group","className","controlId","Label","Control","type","placeholder","Text","Check","label","Button","Login","Menu","Navbar","defaultActiveKey","bg","Container","Nav","Item","Toggle","Collapse","rows","quizzes","questionIndex","questions","choiceIndex","question","choices","answer","generateQuestions","quiz","generateQuizzes","Questions","grade","setGrade","id","getGrade","indexProp","fluid","Row","Col","Image","alt","as","column","sm","Feedback","Alert","gradeProp","size","App","undefined","number","path","Grade","picIndex","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.abd5097c.chunk.js","sourcesContent":["const baseURL =\"https://yifeicua-imagequiz-backend.herokuapp.com\";\r\n\r\nlet getFlowers = () => {\r\n    return fetch(`${baseURL}/flowers`).then((x) => {\r\n        let y = x.json();\r\n        console.log(y);\r\n        return y;\r\n    });\r\n}\r\n\r\n\r\n\r\nlet api = {\r\n    getFlowers: getFlowers,\r\n}\r\n\r\nexport default api;","//import App from \"../App\";\r\nimport { Container, Row, Col, CardGroup, Card, Alert} from \"react-bootstrap\";\r\n//import flowers from './flowers.js';\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport api from \"../communication/api\";\r\nconst Home = (props) => {\r\n    const [flowers, setFlowers] = useState([]);\r\n    useEffect(() => {\r\n        if(flowers.length > 0)return;\r\n        api.getFlowers().then(x => setFlowers(x)).catch((e) => console.log(e));\r\n    },[]\r\n    );\r\n    const {index, setNumber} = useState(0);\r\n    const history = useHistory();\r\n    let send =(event) =>{\r\n        event.preventDefault();\r\n        //alert(event.target.name);\r\n        props.getIndex(event.target.name);\r\n        history.push('/question')\r\n    }\r\n    let curr = [];\r\n    for(var i=0; i<flowers.length; i++){\r\n        curr.push(<Card >\r\n            <Card.Link href = \"#question\"  value={i} onClick={send}>\r\n            <Card.Img variant=\"top\"  src={flowers[i].picture} name={i} onClick={send}/>\r\n            </Card.Link>\r\n            <Card.Body>\r\n                <Card.Title>{flowers[i].name}</Card.Title>\r\n            </Card.Body>\r\n            </Card>);\r\n    }\r\n    //past.appendChild(curr);\r\n    return (\r\n        (curr)\r\n    );\r\n}\r\nexport default Home;\r\n    /*\r\n    let past = document.createElement('div');;\r\n    \r\n    let numrow = 0;\r\n    for(var i=0; i<flowers.length; i++){\r\n        if(i%4==0){\r\n            past.appendChild(curr);\r\n            curr = document.createElement('Row');\r\n        }\r\n        let pcard =document.createElement('Card');\r\n        let pcardimg = document.createElement('Card.Img');\r\n        pcardimg.setAttribute('variant','top');\r\n        pcardimg.src = flowers[i].picture;\r\n        let pcardbod = document.createElement('Card.Body');\r\n        let pcardtit = document.createElement('Card.Title');\r\n        pcardtit.innerHTML = flowers[i].name;\r\n        pcardbod.appendChild(pcardtit);\r\n        pcard.appendChild(pcardimg);\r\n        pcard.appendChild(pcardbod);\r\n        curr.appendChild(pcard)\r\n        */\r\n        ","//import App from \"../App\";\r\nimport React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Card, Button, Form} from 'react-bootstrap';\r\nconst Signin = () => {\r\n    return (\r\n        <Form>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Email address</Form.Label>\r\n                <Form.Control type=\"email\" placeholder=\"Enter email\" />\r\n                <Form.Text className=\"text-muted\">\r\n                    please enter your email address\r\n                </Form.Text>\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicText\">\r\n                <Form.Label>User name</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Enter phone number\" />\r\n                <Form.Text className=\"text-muted\">\r\n                    please enter your username\r\n                </Form.Text>\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control type=\"password\" placeholder=\"Password\" />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\r\n                <Form.Check type=\"checkbox\" label=\"save account number\" />\r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n            Sign up\r\n            </Button>\r\n        </Form>\r\n    );\r\n}\r\nexport default Signin;\r\n\r\n/*\r\n<Card className=\"text-center\">\r\n            <Card.Header>Sign In</Card.Header>\r\n            <Card.Body>\r\n                <Card.Title>Enter your name</Card.Title>\r\n                <Card.Text>Yifei Chen</Card.Text>\r\n                <Button variant=\"primary\">Sign in</Button>\r\n            </Card.Body>\r\n            <Card.Footer className=\"text-muted\">the name will be your username</Card.Footer>\r\n        </Card>\r\n*/","//import App from \"../App\";\r\nimport React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Card, Button, Form} from 'react-bootstrap';\r\nconst Login = () => {\r\n    return (\r\n        <Form>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Email address</Form.Label>\r\n                <Form.Control type=\"email\" placeholder=\"Enter email\" />\r\n                <Form.Text className=\"text-muted\">\r\n                    please enter your email address\r\n                </Form.Text>\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control type=\"password\" placeholder=\"Password\" />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\r\n                <Form.Check type=\"checkbox\" label=\"save account number\" />\r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n            Login\r\n            </Button>\r\n        </Form>\r\n    );\r\n}\r\nexport default Login;\r\n/*\r\nconst Login = () => {\r\n    return (\r\n        <Card className=\"text-center\">\r\n            <Card.Header>Login</Card.Header>\r\n            <Card.Body>\r\n                <Card.Title>Enter your name</Card.Title>\r\n                <Card.Text>Yifei Chen</Card.Text>\r\n                <Button variant=\"primary\">Login</Button>\r\n            </Card.Body>\r\n            <Card.Footer className=\"text-muted\">you already login as Yifei</Card.Footer>\r\n        </Card>\r\n    );\r\n}\r\nexport default Login;\r\n*/","//import App from \"../App\";\r\nimport { Container, Navbar, Nav } from 'react-bootstrap';\r\nconst Menu = () => {\r\n    return (\r\n        <Navbar variant=\"pills\" defaultActiveKey=\"/\" bg=\"dark\">\r\n            <Container>\r\n                <Nav.Item>\r\n                    <Nav.Link href=\"#/\">Home</Nav.Link>\r\n                </Nav.Item>\r\n                <Navbar.Toggle />\r\n                <Navbar.Collapse className=\"justify-content-end\">\r\n                    <Nav.Item>\r\n                        <Nav.Link href=\"#login\">Login</Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                        <Nav.Link href=\"#sign\">Signup</Nav.Link>\r\n                    </Nav.Item>\r\n                </Navbar.Collapse>\r\n            </Container>\r\n        </Navbar>\r\n    );\r\n}\r\nexport default Menu;","//import flowers from './flowers';\r\nimport api from \"../communication/api\";\r\nconst flowers = api.getFlowers().then(x => (x.rows)).catch((e) => console.log(e));\r\n\r\nlet generateQuestions = () => {\r\n    let questions = [];\r\n    let choiceIndex = 0;\r\n    for(let i = 0; i < flowers.length; i++) {\r\n        choiceIndex = i;\r\n        if(choiceIndex > (flowers.length - 4)){\r\n           choiceIndex = i - 2;\r\n        }\r\n        let question = {\r\n            picture: flowers[i].picture,\r\n            choices: [flowers[choiceIndex].name, flowers[choiceIndex+1].name, flowers[choiceIndex+2].name],\r\n            answer: flowers[i].name\r\n        };\r\n        questions.push(question);\r\n    }\r\n    return questions;\r\n};\r\n\r\nlet generateQuizzes = () => {\r\n    let quizzes = []; \r\n    let questionIndex = 0;\r\n    let questions = generateQuestions();\r\n    for(let i = 0; i < questions.length; i++){\r\n        questionIndex = i;\r\n        if(questionIndex > (questions.length - 7)) {\r\n            questionIndex = i - 5;\r\n        }\r\n        let quiz = [\r\n            questions[questionIndex], \r\n            questions[questionIndex+1], \r\n            questions[questionIndex+2], \r\n            questions[questionIndex+3], \r\n            questions[questionIndex+4],\r\n            questions[questionIndex+5]\r\n        ];\r\n        quizzes.push(quiz);\r\n    }\r\n    return quizzes;\r\n};\r\n\r\nlet quizzes = generateQuizzes();\r\n\r\n\r\nexport default quizzes;","//import App from \"../App\";\r\nimport React, { useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport quizzes from './data.js';\r\n//import Home from './Home.js';\r\n//import QuestionsPage from './question.js';\r\n//import grade from './grade.js';\r\nimport { Alert, Card, Button, Form} from 'react-bootstrap';\r\nimport { Container, Row, Col, CardGroup, Image} from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router\";\r\nconst Questions = (props) => {\r\n        const {grade, setGrade} = useState(0);\r\n        const history = useHistory();\r\n        //alert(props.indexProp);\r\n        //alert(props.gradeProp);\r\n        let send = (event) => {\r\n          //event.preventDefault();\r\n          if(event.target.id==event.target.value){\r\n            props.getGrade(1);\r\n          }else{\r\n            props.getGrade(0);\r\n          }\r\n        }\r\n\r\n        let curr = [];\r\n        for(var i=0; i<quizzes[props.indexProp].length; i++){\r\n                curr.push(<div><Container fluid>\r\n                    <Row \r\n                      className=\"justify-content-center \r\n                                 align-items-center\"\r\n                    >\r\n                      <Col>\r\n                        <Image\r\n                          src= {quizzes[props.indexProp][i].picture}\r\n                          alt={quizzes[props.indexProp][i].answer}\r\n                        />\r\n                      </Col>\r\n                      <Col>\r\n                      <fieldset>\r\n                        <Form>\r\n                        <Form.Group as={Row} className=\"mb-3\">\r\n                        <Form.Label as=\"legend\" column sm={2}>\r\n                        </Form.Label>\r\n                        <Col sm={10}>\r\n                            <Form.Check\r\n                            label={quizzes[props.indexProp][i].choices[0]} type ={'radio'} name=\"group1\" id ={quizzes[props.indexProp][i].choices[0]} value ={quizzes[props.indexProp][i].answer} onClick={send}\r\n                            />\r\n                            <Form.Check\r\n                            label={quizzes[props.indexProp][i].choices[1]} type ={'radio'} name=\"group1\" id ={quizzes[props.indexProp][i].choices[1]} value ={quizzes[props.indexProp][i].answer}  onClick={send}\r\n                            />\r\n                            <Form.Check\r\n\r\n                            label={quizzes[props.indexProp][i].choices[2]} type ={'radio'} name=\"group1\" id ={quizzes[props.indexProp][i].choices[2]} value ={quizzes[props.indexProp][i].answer}  onClick={send}\r\n                            />\r\n                            <Form.Control.Feedback label={quizzes[props.indexProp][i].answer}>You did it!</Form.Control.Feedback>\r\n                        </Col>\r\n                        </Form.Group>\r\n                        </Form>\r\n                    </fieldset>\r\n                      </Col>\r\n                    </Row>\r\n                  </Container></div>);\r\n        }\r\n        //past.appendChild(curr);\r\n        curr.push(<Row><Alert key={\"info\"}>\r\n          Your grade is {props.gradeProp} \r\n        </Alert></Row>);\r\n        curr.push(<Row><Button href=\"/question\" variant=\"primary\" size=\"lg\">\r\n        Reapet same quiz\r\n      </Button>{' '}\r\n      <Button href=\"/\" variant=\"secondary\" size=\"lg\">\r\n        Go Back to do Others\r\n      </Button>{' '}</Row>);\r\n        return (\r\n            (curr)\r\n        );\r\n    }\r\nexport default Questions;\r\n\r\n\r\n\r\n\r\n/*\r\nlet curr = [];\r\n        for(var i=0; i<quizzes.length; i++){\r\n            for(var j=0; j<quizzes[i].length; j++){\r\n                curr.push(<div><Container fluid>\r\n                    <Row \r\n                      className=\"justify-content-center \r\n                                 align-items-center\"\r\n                    >\r\n                      <Col>\r\n                        <Image\r\n                          src= {quizzes[i][j].picture}\r\n                          alt={quizzes[i][j].answer}\r\n                        />\r\n                      </Col>\r\n                      <Col>\r\n                      <fieldset>\r\n                        <Form.Group as={Row} className=\"mb-3\">\r\n                        <Form.Label as=\"legend\" column sm={2}>\r\n                        </Form.Label>\r\n                        <Col sm={10}>\r\n                            <Form.Check\r\n                            label={quizzes[i][j].choices[0]}\r\n                            />\r\n                            <Form.Check\r\n                            label={quizzes[i][j].choices[1]}\r\n                            />\r\n                            <Form.Check\r\n\r\n                            label={quizzes[i][j].choices[2]}\r\n                            />\r\n                        </Col>\r\n                        </Form.Group>\r\n                    </fieldset>\r\n                      </Col>\r\n                    </Row>\r\n                  </Container></div>);\r\n            }\r\n        }\r\n        //past.appendChild(curr);\r\n        \r\n        return (\r\n            (curr)\r\n        );\r\n*/\r\n\r\n/*\r\n    let curr = [];\r\n        for(var i=0; i<quizzes.length; i++){\r\n            for(var j=0; j<quizzes[i].length; j++){\r\n                curr.push(<Card >\r\n                    <Card.Img variant=\"top\"  src={quizzes[i][j].picture}/>\r\n                    <Card.Body>\r\n                        <Card.Title>{quizzes[i][j].answer}</Card.Title>\r\n                    </Card.Body>\r\n                    </Card>);\r\n            }\r\n        }\r\n        //past.appendChild(curr);\r\n        \r\n        return (\r\n            (curr)\r\n        );\r\n*/","//import logo from './logo.svg';\nimport Home from './components/Home';\nimport Signin from './components/Signup';\nimport Login from './components/Login';\nimport Menu from './components/Menu';\nimport Questions from './components/question';\nimport { useState } from 'react';\n//import React from 'react';\nimport {\n  //BrowserRouter as router,\n  HashRouter,\n  Switch,\n  Route,\n  //Link\n}from \"react-router-dom\";\nimport { Container, Row, Col, Alert } from 'react-bootstrap';\n//import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  const [number, setNumber] = useState(undefined);\n  const [grade, setGrade] = useState(0);\n  let index = 0;\n\n  let getnumIndex = (picIndex) => {\n    setNumber(picIndex);\n    \n  }\n  let updateGrade = (Grade) => {\n    setGrade(grade+Grade);\n    //alert(grade);\n    \n  }\n  //alert(number);\n  return (\n    <HashRouter>\n      <Container>\n        <Row>\n          <Col><Menu /></Col>\n        </Row>\n        <Switch>\n          <Route path=\"/sign\">\n            <Signin />\n          </Route>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/question\">\n            <Questions indexProp={number} getGrade={updateGrade} gradeProp = {grade}/>\n          </Route>\n          <Route path=\"/\">\n            <Home getIndex={getnumIndex} />\n          </Route>\n        </Switch>\n\n      </Container>\n    </HashRouter>\n  );\n}\n/*\nfunction Home(){\n  return <h2>Home</h2>\n}\nfunction Signin(){\n  return <h2>Signin</h2>\n}\nfunction Login(){\n  return <h2>Login</h2>\n}\n*/\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}