{"version":3,"sources":["communication/api.js","components/Home.js","components/Signup.js","components/Login.js","components/Menu.js","components/question.js","App.js","reportWebVitals.js","index.js"],"names":["baseURL","api","getFlowers","fetch","then","x","y","json","console","log","getQuiz","name","map","picture","choices","split","answer","setUser","email","password","method","body","JSON","stringify","headers","getUser","Home","props","useState","flowers","setFlowers","useEffect","length","catch","e","history","index","setNumber","useHistory","send","event","preventDefault","getIndex","target","push","curr","i","Card","Link","href","value","onClick","Img","variant","src","Body","Title","Signin","succed","setSucced","setEmail","setName","setPassword","Form","onSubmit","Group","className","controlId","Label","Control","type","placeholder","onChange","required","Text","Check","label","Button","Row","Alert","Login","Menu","Navbar","defaultActiveKey","bg","Container","Nav","Item","Toggle","Collapse","Questions","quiz","setQuiz","indexProp","grade","setGrade","id","getGrade","fluid","Col","Image","alt","as","column","sm","Feedback","gradeProp","size","App","undefined","number","path","Grade","picIndex","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b56f4182.chunk.js","sourcesContent":["const baseURL =\"https://yifeicua-imagequiz-backend.herokuapp.com\";\r\n\r\nlet getFlowers = () => {\r\n    return fetch(`${baseURL}/flowers`).then((x) => {\r\n        let y = x.json();\r\n        console.log(y);\r\n        return y;\r\n    });\r\n}\r\n\r\nlet getQuiz = (name) =>{\r\n    return fetch(`${baseURL}/quiz/${name}`)\r\n    .then((x) => x.json())\r\n    .then((x)=> x.map((y) => {\r\n        return{\r\n            picture: y.picture,\r\n            choices: y.choices.split(\",\"),\r\n            answer: y.answer,\r\n        };\r\n    })\r\n    \r\n    )\r\n}\r\n\r\nlet setUser = (name, email, password) =>{\r\n    return fetch(`${baseURL}/register`,{\r\n        method: \"POST\",\r\n        body: JSON.stringify({name,email,password}),\r\n        headers:{\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n    });\r\n}\r\nlet getUser = (email, password) =>{\r\n    return fetch(`${baseURL}/login`,{\r\n        method: \"POST\",\r\n        body: JSON.stringify({email,password}),\r\n        headers:{\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n    });\r\n}\r\n\r\n\r\nlet api = {\r\n    getFlowers: getFlowers,\r\n    getQuiz: getQuiz,\r\n    setUser: setUser,\r\n    getUser: getUser\r\n}\r\n\r\nexport default api;","//import App from \"../App\";\r\nimport { Container, Row, Col, CardGroup, Card, Alert} from \"react-bootstrap\";\r\n//import flowers from './flowers.js';\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport api from \"../communication/api\";\r\nconst Home = (props) => {\r\n    const [flowers, setFlowers] = useState([]);\r\n    useEffect(() => {\r\n        if(flowers.length > 0)return;\r\n        api.getFlowers().then(x => setFlowers(x)).catch((e) => console.log(e));\r\n    },[]\r\n    );\r\n    const {index, setNumber} = useState(0);\r\n    const history = useHistory();\r\n    let send =(event) =>{\r\n        event.preventDefault();\r\n        //alert(event.target.name);\r\n        props.getIndex(event.target.name);\r\n        history.push('/question')\r\n    }\r\n    let curr = [];\r\n    for(var i=0; i<flowers.length; i++){\r\n        curr.push(<Card >\r\n            <Card.Link href = \"#question\"  value={flowers[i].name} onClick={send}>\r\n            <Card.Img variant=\"top\"  src={flowers[i].picture} name={flowers[i].name} onClick={send}/>\r\n            </Card.Link>\r\n            <Card.Body>\r\n                <Card.Title>{flowers[i].name}</Card.Title>\r\n            </Card.Body>\r\n            </Card>);\r\n    }\r\n    //past.appendChild(curr);\r\n    return (\r\n        (curr)\r\n    );\r\n}\r\nexport default Home;\r\n    /*\r\n    let past = document.createElement('div');;\r\n    \r\n    let numrow = 0;\r\n    for(var i=0; i<flowers.length; i++){\r\n        if(i%4==0){\r\n            past.appendChild(curr);\r\n            curr = document.createElement('Row');\r\n        }\r\n        let pcard =document.createElement('Card');\r\n        let pcardimg = document.createElement('Card.Img');\r\n        pcardimg.setAttribute('variant','top');\r\n        pcardimg.src = flowers[i].picture;\r\n        let pcardbod = document.createElement('Card.Body');\r\n        let pcardtit = document.createElement('Card.Title');\r\n        pcardtit.innerHTML = flowers[i].name;\r\n        pcardbod.appendChild(pcardtit);\r\n        pcard.appendChild(pcardimg);\r\n        pcard.appendChild(pcardbod);\r\n        curr.appendChild(pcard)\r\n        */\r\n        ","//import App from \"../App\";\r\nimport React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Alert,Card, Button, Form, Row} from 'react-bootstrap';\r\nimport { useEffect, useState } from \"react\";\r\nimport api from '../communication/api';\r\nconst Signin = () => {\r\n    let [succed, setSucced] = useState();\r\n    const [email, setEmail] = useState();\r\n    const [name, setName] = useState();\r\n    const [password, setPassword] = useState();\r\n    //const emailInput = ({target:{email}}) => setEmail(email);\r\n    //const nameInput = ({target:{name}}) => setName(name);\r\n    //const passwordInput = ({target:{password}}) => setPassword(password);\r\n    const onFormSubmit = e => {\r\n          e.preventDefault();\r\n          console.log(email);\r\n          console.log(name);\r\n          console.log(password);\r\n          succed = api.setUser(name,email,password).then(x => {console.log(x); setSucced(\"       Sign up successfully！！！\");});\r\n    }\r\n    return (\r\n        <><Form onSubmit={onFormSubmit}>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Email address</Form.Label>\r\n                <Form.Control type=\"email\" placeholder=\"Enter email\" onChange={e => setEmail(e.target.value)} required />\r\n                <Form.Text className=\"text-muted\">\r\n                    please enter your email address\r\n                </Form.Text>\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicText\">\r\n                <Form.Label>User name</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"username\" onChange={e => setName(e.target.value)}  required />\r\n                <Form.Text className=\"text-muted\">\r\n                    please enter your username\r\n                </Form.Text>\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control type=\"password\" placeholder=\"Password\" onChange={e => setPassword(e.target.value)} required />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\r\n                <Form.Check type=\"checkbox\" label=\"save account number\" />\r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n                Sign up\r\n            </Button>\r\n        </Form>\r\n        <Row><Alert key={\"info\"}>Sign up with username(show in console): {name}{succed}</Alert></Row>\r\n        </>\r\n    );\r\n}\r\nexport default Signin;\r\n\r\n/*\r\n<Card className=\"text-center\">\r\n            <Card.Header>Sign In</Card.Header>\r\n            <Card.Body>\r\n                <Card.Title>Enter your name</Card.Title>\r\n                <Card.Text>Yifei Chen</Card.Text>\r\n                <Button variant=\"primary\">Sign in</Button>\r\n            </Card.Body>\r\n            <Card.Footer className=\"text-muted\">the name will be your username</Card.Footer>\r\n        </Card>\r\n*/","//import App from \"../App\";\r\nimport React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Alert,Card, Button, Form, Row} from 'react-bootstrap';\r\nimport { useEffect, useState } from \"react\";\r\nimport api from '../communication/api';\r\nconst Login = () => {\r\n    let [succed, setSucced] = useState();\r\n    const [email, setEmail] = useState();\r\n    const [password, setPassword] = useState();\r\n    //const emailInput = ({target:{email}}) => setEmail(email);\r\n    //const nameInput = ({target:{name}}) => setName(name);\r\n    //const passwordInput = ({target:{password}}) => setPassword(password);\r\n    const onFormSubmit = e => {\r\n          e.preventDefault();\r\n          console.log(email);\r\n          console.log(password);\r\n          api.getUser(email,password).then(x => {console.log(x.json()); setSucced(\"       Login successfully！！！(check console, there is a problem on isvalid)\");});\r\n    }\r\n    return (\r\n        <><Form onSubmit={onFormSubmit}>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Email address</Form.Label>\r\n                <Form.Control type=\"email\" placeholder=\"Enter email\" onChange={e => setEmail(e.target.value)} required />\r\n                <Form.Text className=\"text-muted\">\r\n                    please enter your email address\r\n                </Form.Text>\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control type=\"password\" placeholder=\"Password\" onChange={e => setPassword(e.target.value)} required />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\r\n                <Form.Check type=\"checkbox\" label=\"save account number\" />\r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n                Login\r\n            </Button>\r\n        </Form><Row><Alert key={\"info\"}>Login with Email(show in console): {email}{succed}</Alert></Row></>\r\n    );\r\n}\r\nexport default Login;\r\n/*\r\nconst Login = () => {\r\n    return (\r\n        <Card className=\"text-center\">\r\n            <Card.Header>Login</Card.Header>\r\n            <Card.Body>\r\n                <Card.Title>Enter your name</Card.Title>\r\n                <Card.Text>Yifei Chen</Card.Text>\r\n                <Button variant=\"primary\">Login</Button>\r\n            </Card.Body>\r\n            <Card.Footer className=\"text-muted\">you already login as Yifei</Card.Footer>\r\n        </Card>\r\n    );\r\n}\r\nexport default Login;\r\n*/","//import App from \"../App\";\r\nimport { Container, Navbar, Nav } from 'react-bootstrap';\r\nconst Menu = () => {\r\n    return (\r\n        <Navbar variant=\"pills\" defaultActiveKey=\"/\" bg=\"dark\">\r\n            <Container>\r\n                <Nav.Item>\r\n                    <Nav.Link href=\"#/\">Home</Nav.Link>\r\n                </Nav.Item>\r\n                <Navbar.Toggle />\r\n                <Navbar.Collapse className=\"justify-content-end\">\r\n                    <Nav.Item>\r\n                        <Nav.Link href=\"#login\">Login</Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                        <Nav.Link href=\"#sign\">Signup</Nav.Link>\r\n                    </Nav.Item>\r\n                </Navbar.Collapse>\r\n            </Container>\r\n        </Navbar>\r\n    );\r\n}\r\nexport default Menu;","//import App from \"../App\";\r\nimport React, { useEffect, useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n//import quizzes from './data.js';\r\nimport api from \"../communication/api\";\r\n//import Home from './Home.js';\r\n//import QuestionsPage from './question.js';\r\n//import grade from './grade.js';\r\nimport { Alert, Card, Button, Form} from 'react-bootstrap';\r\nimport { Container, Row, Col, CardGroup, Image} from \"react-bootstrap\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nconst Questions = (props) => {\r\n  //console.log(props.indexProp);\r\n  const [quiz, setQuiz] = useState([]);\r\n  useEffect(() => {\r\n    console.log(props.indexProp);\r\n    api.getQuiz(props.indexProp).then(x => setQuiz(x));\r\n  },[]);\r\n  const {grade, setGrade} = useState(0);\r\n  const history = useHistory();\r\n  //alert(props.indexProp);\r\n  //alert(props.gradeProp);\r\n  let send = (event) => {\r\n    //event.preventDefault();\r\n    if(event.target.id==event.target.value){\r\n      props.getGrade(1);\r\n    }else{\r\n      props.getGrade(0);\r\n    }\r\n  }\r\n\r\n  let curr = [];\r\n  for(var i=0; i<quiz.length; i++){\r\n    curr.push(<div><Container fluid>\r\n        <Row \r\n          className=\"justify-content-center \r\n                      align-items-center\"\r\n        >\r\n          <Col>\r\n            <Image\r\n              src= {quiz[i].picture}\r\n              alt={quiz[i].answer}\r\n            />\r\n          </Col>\r\n          <Col>\r\n          <fieldset>\r\n            <Form>\r\n            <Form.Group as={Row} className=\"mb-3\">\r\n            <Form.Label as=\"legend\" column sm={2}>\r\n            </Form.Label>\r\n            <Col sm={10}>\r\n                <Form.Check\r\n                label={quiz[i].choices[0]} type ={'radio'} name=\"group1\" id ={quiz[i].choices[0]} value ={quiz[i].answer} onClick={send}\r\n                />\r\n                <Form.Check\r\n                label={quiz[i].choices[1]} type ={'radio'} name=\"group1\" id ={quiz[i].choices[1]} value ={quiz[i].answer}  onClick={send}\r\n                />\r\n                <Form.Check\r\n\r\n                label={quiz[i].choices[2]} type ={'radio'} name=\"group1\" id ={quiz[i].choices[2]} value ={quiz[i].answer}  onClick={send}\r\n                />\r\n                <Form.Control.Feedback label={quiz[i].answer}>You did it!</Form.Control.Feedback>\r\n            </Col>\r\n            </Form.Group>\r\n            </Form>\r\n        </fieldset>\r\n          </Col>\r\n        </Row>\r\n      </Container></div>);\r\n    }\r\n    //past.appendChild(curr);\r\n    curr.push(<Row><Alert key={\"info\"}>\r\n      Your grade is {props.gradeProp} \r\n    </Alert></Row>);\r\n    curr.push(<Row><Button variant=\"primary\" size=\"lg\">\r\n    Reapet same quiz\r\n  </Button>{' '}\r\n  <Button href=\"#\" variant=\"secondary\" size=\"lg\">\r\n    Go Back to do Others\r\n  </Button>{' '}</Row>);\r\n    return (\r\n        (curr)\r\n    );\r\n}\r\nexport default Questions;\r\n\r\n\r\n\r\n\r\n/*\r\nlet curr = [];\r\n        for(var i=0; i<quizzes.length; i++){\r\n            for(var j=0; j<quizzes[i].length; j++){\r\n                curr.push(<div><Container fluid>\r\n                    <Row \r\n                      className=\"justify-content-center \r\n                                 align-items-center\"\r\n                    >\r\n                      <Col>\r\n                        <Image\r\n                          src= {quizzes[i][j].picture}\r\n                          alt={quizzes[i][j].answer}\r\n                        />\r\n                      </Col>\r\n                      <Col>\r\n                      <fieldset>\r\n                        <Form.Group as={Row} className=\"mb-3\">\r\n                        <Form.Label as=\"legend\" column sm={2}>\r\n                        </Form.Label>\r\n                        <Col sm={10}>\r\n                            <Form.Check\r\n                            label={quizzes[i][j].choices[0]}\r\n                            />\r\n                            <Form.Check\r\n                            label={quizzes[i][j].choices[1]}\r\n                            />\r\n                            <Form.Check\r\n\r\n                            label={quizzes[i][j].choices[2]}\r\n                            />\r\n                        </Col>\r\n                        </Form.Group>\r\n                    </fieldset>\r\n                      </Col>\r\n                    </Row>\r\n                  </Container></div>);\r\n            }\r\n        }\r\n        //past.appendChild(curr);\r\n        \r\n        return (\r\n            (curr)\r\n        );\r\n*/\r\n\r\n/*\r\n    let curr = [];\r\n        for(var i=0; i<quizzes.length; i++){\r\n            for(var j=0; j<quizzes[i].length; j++){\r\n                curr.push(<Card >\r\n                    <Card.Img variant=\"top\"  src={quizzes[i][j].picture}/>\r\n                    <Card.Body>\r\n                        <Card.Title>{quizzes[i][j].answer}</Card.Title>\r\n                    </Card.Body>\r\n                    </Card>);\r\n            }\r\n        }\r\n        //past.appendChild(curr);\r\n        \r\n        return (\r\n            (curr)\r\n        );\r\n*/","//import logo from './logo.svg';\nimport Home from './components/Home';\nimport Signin from './components/Signup';\nimport Login from './components/Login';\nimport Menu from './components/Menu';\nimport Questions from './components/question';\nimport { useState } from 'react';\n//import React from 'react';\nimport {\n  //BrowserRouter as router,\n  HashRouter,\n  Switch,\n  Route,\n  //Link\n}from \"react-router-dom\";\nimport { Container, Row, Col, Alert } from 'react-bootstrap';\n//import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  const [number, setNumber] = useState(undefined);\n  const [grade, setGrade] = useState(0);\n  let index = 0;\n\n  let getnumIndex = (picIndex) => {\n    setNumber(picIndex);\n    \n  }\n  let updateGrade = (Grade) => {\n    setGrade(grade+Grade);\n    //alert(grade);\n    \n  }\n  //alert(number);\n  return (\n    <HashRouter>\n      <Container>\n        <Row>\n          <Col><Menu /></Col>\n        </Row>\n        <Switch>\n          <Route path=\"/sign\">\n            <Signin />\n          </Route>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/question\">\n            <Questions indexProp={number} getGrade={updateGrade} gradeProp = {grade}/>\n          </Route>\n          <Route path=\"/\">\n            <Home getIndex={getnumIndex} />\n          </Route>\n        </Switch>\n\n      </Container>\n    </HashRouter>\n  );\n}\n/*\nfunction Home(){\n  return <h2>Home</h2>\n}\nfunction Signin(){\n  return <h2>Signin</h2>\n}\nfunction Login(){\n  return <h2>Login</h2>\n}\n*/\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}