{"version":3,"sources":["communication/api.js","components/Home.js","components/Signup.js","components/Login.js","components/Menu.js","components/question.js","App.js","reportWebVitals.js","index.js"],"names":["baseURL","api","getFlowers","fetch","then","x","y","json","console","log","getQuiz","name","map","picture","choices","split","answer","setUser","email","password","method","withCredentials","headers","body","JSON","stringify","getUser","credentials","Accept","verifyTwitter","username","logout","Home","props","useState","flowers","setFlowers","useEffect","length","catch","e","history","index","setNumber","useHistory","send","event","preventDefault","getIndex","target","push","curr","i","Card","Link","href","value","onClick","Img","variant","src","Body","Title","Signin","succed","setSucced","setEmail","setName","setPassword","Form","onSubmit","Group","className","controlId","Label","Control","type","placeholder","onChange","required","Text","Check","label","Button","Row","Alert","Login","done","localStorage","setItem","onAuthenticated","pathname","Menu","Navbar","defaultActiveKey","bg","Container","Nav","Item","Toggle","Collapse","Questions","quiz","setQuiz","indexProp","undefined","grade","setGrade","id","getGrade","fluid","Col","Image","alt","as","column","sm","Feedback","gradeProp","size","PrivateRoute","children","rest","customer","getItem","render","location","to","state","from","Twitter","useParams","App","isAuthenticated","setIsAuthenticated","onCustomerAuthenticated","number","customerAuthenticated","exact","path","Grade","picIndex","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.52cfb003.chunk.js","sourcesContent":["const baseURL =\"https://yifeicua-imagequiz-backend.herokuapp.com\";\r\n\r\nlet getFlowers = () => {\r\n    return fetch(`${baseURL}/flowers`).then((x) => {\r\n        let y = x.json();\r\n        console.log(y);\r\n        return y;\r\n    });\r\n}\r\n\r\nlet getQuiz = (name) =>{\r\n    return fetch(`${baseURL}/quiz/${name}`)\r\n    .then((x) => x.json())\r\n    /*\r\n    .then(x => {\r\n        if (x.status == 401) {\r\n            window.location.replace(\"/login\");\r\n        } \r\n    })\r\n    */\r\n    .then((x)=> x.map((y) => {\r\n        return{\r\n            picture: y.picture,\r\n            choices: y.choices.split(\",\"),\r\n            answer: y.answer,\r\n        };\r\n    })\r\n    \r\n    )\r\n    \r\n}\r\n/*\r\nlet setUser = (name, email, password) =>{\r\n    return fetch(`${baseURL}/register`,{\r\n        method: \"POST\",\r\n        body: JSON.stringify({name,email,password}),\r\n        headers:{\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n    });\r\n}\r\nlet getUser = (email, password) =>{\r\n    return fetch(`${baseURL}/login`,{\r\n        method: \"POST\",\r\n        body: JSON.stringify({email,password}),\r\n        headers:{\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n    });\r\n}\r\n*/\r\n  let setUser = (name, email, password) => {\r\n    return fetch(`${baseURL}/register`, {\r\n        method: 'POST',\r\n        withCredentials: true,\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({name, email, password})\r\n    }).then(x => x.json());\r\n};\r\n\r\nlet getUser = (email, password) => {\r\n    return fetch(`${baseURL}/login`, {\r\n        method: \"POST\",\r\n        credentials: \"include\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          \"Access-Control-Allow-Credentials\": true\r\n        },\r\n        body: JSON.stringify({email, password})\r\n    }).then(x => x.json());\r\n}\r\nlet logout = () => {\r\n    return fetch(`${baseURL}/logout`, {\r\n        method: \"GET\",\r\n        credentials: \"include\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          \"Access-Control-Allow-Credentials\": true\r\n        }\r\n      })\r\n    .then(x => x.json());\r\n}\r\n\r\nlet verifyTwitter = (username) => {\r\n  return fetch(`${baseURL}/twitter/verify/${username}`, {\r\n      method: \"GET\",\r\n      credentials: \"include\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        \"Access-Control-Allow-Credentials\": true\r\n      }\r\n    })\r\n  .then(x => x.json());\r\n}\r\n\r\nlet api = {\r\n    getFlowers: getFlowers,\r\n    getQuiz: getQuiz,\r\n    setUser: setUser,\r\n    getUser: getUser,\r\n    verifyTwitter: verifyTwitter,\r\n    logout:logout\r\n}\r\n\r\nexport default api;","//import App from \"../App\";\r\nimport { Container, Row, Col, CardGroup, Card, Alert} from \"react-bootstrap\";\r\n//import flowers from './flowers.js';\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport api from \"../communication/api\";\r\nconst Home = (props) => {\r\n    const [flowers, setFlowers] = useState([]);\r\n    useEffect(() => {\r\n        if(flowers.length > 0)return;\r\n        api.getFlowers().then(x => setFlowers(x)).catch((e) => console.log(e));\r\n    },[]\r\n    );\r\n    const {index, setNumber} = useState(0);\r\n    const history = useHistory();\r\n    let send =(event) =>{\r\n        event.preventDefault();\r\n        //alert(event.target.name);\r\n        props.getIndex(event.target.name);\r\n        history.push('/question')\r\n    }\r\n    let curr = [];\r\n    for(var i=0; i<flowers.length; i++){\r\n        curr.push(<Card >\r\n            <Card.Link href = \"#question\"  value={flowers[i].name} onClick={send}>\r\n            <Card.Img variant=\"top\"  src={flowers[i].picture} name={flowers[i].name} onClick={send}/>\r\n            </Card.Link>\r\n            <Card.Body>\r\n                <Card.Title>{flowers[i].name}</Card.Title>\r\n            </Card.Body>\r\n            </Card>);\r\n    }\r\n    //past.appendChild(curr);\r\n    return (\r\n        (curr)\r\n    );\r\n}\r\nexport default Home;\r\n    /*\r\n    let past = document.createElement('div');;\r\n    \r\n    let numrow = 0;\r\n    for(var i=0; i<flowers.length; i++){\r\n        if(i%4==0){\r\n            past.appendChild(curr);\r\n            curr = document.createElement('Row');\r\n        }\r\n        let pcard =document.createElement('Card');\r\n        let pcardimg = document.createElement('Card.Img');\r\n        pcardimg.setAttribute('variant','top');\r\n        pcardimg.src = flowers[i].picture;\r\n        let pcardbod = document.createElement('Card.Body');\r\n        let pcardtit = document.createElement('Card.Title');\r\n        pcardtit.innerHTML = flowers[i].name;\r\n        pcardbod.appendChild(pcardtit);\r\n        pcard.appendChild(pcardimg);\r\n        pcard.appendChild(pcardbod);\r\n        curr.appendChild(pcard)\r\n        */\r\n        ","//import App from \"../App\";\r\nimport React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Alert,Card, Button, Form, Row} from 'react-bootstrap';\r\nimport { useEffect, useState } from \"react\";\r\nimport api from '../communication/api';\r\nconst Signin = () => {\r\n    let [succed, setSucced] = useState();\r\n    const [email, setEmail] = useState();\r\n    const [name, setName] = useState();\r\n    const [password, setPassword] = useState();\r\n    //const emailInput = ({target:{email}}) => setEmail(email);\r\n    //const nameInput = ({target:{name}}) => setName(name);\r\n    //const passwordInput = ({target:{password}}) => setPassword(password);\r\n    const onFormSubmit = e => {\r\n          e.preventDefault();\r\n          console.log(email);\r\n          console.log(name);\r\n          console.log(password);\r\n          succed = api.setUser(name,email,password).then(x => {console.log(x); setSucced(\"       Sign up successfully！！！\");});\r\n    }\r\n    return (\r\n        <><Form onSubmit={onFormSubmit}>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Email address</Form.Label>\r\n                <Form.Control type=\"email\" placeholder=\"Enter email\" onChange={e => setEmail(e.target.value)} required />\r\n                <Form.Text className=\"text-muted\">\r\n                    please enter your email address\r\n                </Form.Text>\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicText\">\r\n                <Form.Label>User name</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"username\" onChange={e => setName(e.target.value)}  required />\r\n                <Form.Text className=\"text-muted\">\r\n                    please enter your username\r\n                </Form.Text>\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control type=\"password\" placeholder=\"Password\" onChange={e => setPassword(e.target.value)} required />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\r\n                <Form.Check type=\"checkbox\" label=\"save account number\" />\r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n                Sign up\r\n            </Button>\r\n        </Form>\r\n        <Row><Alert key={\"info\"}>Sign up with username(show in console): {name}{succed}</Alert></Row>\r\n        </>\r\n    );\r\n}\r\nexport default Signin;\r\n\r\n/*\r\n<Card className=\"text-center\">\r\n            <Card.Header>Sign In</Card.Header>\r\n            <Card.Body>\r\n                <Card.Title>Enter your name</Card.Title>\r\n                <Card.Text>Yifei Chen</Card.Text>\r\n                <Button variant=\"primary\">Sign in</Button>\r\n            </Card.Body>\r\n            <Card.Footer className=\"text-muted\">the name will be your username</Card.Footer>\r\n        </Card>\r\n*/","//import App from \"../App\";\r\nimport React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Alert,Card, Button, Form, Row} from 'react-bootstrap';\r\nimport { useEffect, useState } from \"react\";\r\nimport api from '../communication/api';\r\nimport { useHistory } from 'react-router-dom';\r\nconst Login = (props) => {\r\n    let [succed, setSucced] = useState();\r\n    const [email, setEmail] = useState();\r\n    const [password, setPassword] = useState();\r\n    const history = useHistory();\r\n    //const emailInput = ({target:{email}}) => setEmail(email);\r\n    //const nameInput = ({target:{name}}) => setName(name);\r\n    //const passwordInput = ({target:{password}}) => setPassword(password);\r\n    const onFormSubmit = e => {\r\n          e.preventDefault();\r\n          console.log(email);\r\n          console.log(password);\r\n          api.getUser(email,password)\r\n          //.then(x => x.json())\r\n          .then(x => {\r\n              console.log(x); \r\n              if(x.done==true){\r\n                localStorage.setItem(\"customer\",email);  \r\n                setSucced(\"       Login successfully！！！(check console)\");\r\n                props.onAuthenticated();\r\n                history.push({ pathname: '/' });}\r\n              else{setSucced(\"       Login faild(check console)\");}});\r\n    }\r\n    return (\r\n        <><Form onSubmit={onFormSubmit}>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Email address</Form.Label>\r\n                <Form.Control type=\"email\" placeholder=\"Enter email\" onChange={e => setEmail(e.target.value)} required />\r\n                <Form.Text className=\"text-muted\">\r\n                    please enter your email address\r\n                </Form.Text>\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control type=\"password\" placeholder=\"Password\" onChange={e => setPassword(e.target.value)} required />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\r\n                <Form.Check type=\"checkbox\" label=\"save account number\" />\r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n                Login\r\n            </Button>\r\n        </Form><Row><Alert key={\"info\"}>Login with Email(show in console): {email}{succed}</Alert></Row></>\r\n    );\r\n}\r\nexport default Login;\r\n/*\r\nconst Login = () => {\r\n    return (\r\n        <Card className=\"text-center\">\r\n            <Card.Header>Login</Card.Header>\r\n            <Card.Body>\r\n                <Card.Title>Enter your name</Card.Title>\r\n                <Card.Text>Yifei Chen</Card.Text>\r\n                <Button variant=\"primary\">Login</Button>\r\n            </Card.Body>\r\n            <Card.Footer className=\"text-muted\">you already login as Yifei</Card.Footer>\r\n        </Card>\r\n    );\r\n}\r\nexport default Login;\r\n*/","//import App from \"../App\";\r\nimport { Container, Navbar, Nav } from 'react-bootstrap';\r\nconst Menu = () => {\r\n    return (\r\n        <Navbar variant=\"pills\" defaultActiveKey=\"/\" bg=\"dark\">\r\n            <Container>\r\n                <Nav.Item>\r\n                    <Nav.Link href=\"#/\">Home</Nav.Link>\r\n                </Nav.Item>\r\n                <Navbar.Toggle />\r\n                <Navbar.Collapse className=\"justify-content-end\">\r\n                    <Nav.Item>\r\n                        <Nav.Link href=\"#login\">Login</Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                        <Nav.Link href=\"http://localhost:5000/login/twitter\">Sign In with Twitter</Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                        <Nav.Link href=\"#sign\">Signup</Nav.Link>\r\n                    </Nav.Item>\r\n                </Navbar.Collapse>\r\n            </Container>\r\n        </Navbar>\r\n    );\r\n}\r\nexport default Menu;","//import App from \"../App\";\r\nimport React, { useEffect, useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n//import quizzes from './data.js';\r\nimport api from \"../communication/api\";\r\n//import Home from './Home.js';\r\n//import QuestionsPage from './question.js';\r\n//import grade from './grade.js';\r\nimport { Alert, Card, Button, Form} from 'react-bootstrap';\r\nimport { Container, Row, Col, CardGroup, Image} from \"react-bootstrap\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nconst Questions = (props) => {\r\n  //console.log(props.indexProp);\r\n  const [quiz, setQuiz] = useState([]);\r\n  useEffect(() => {\r\n    console.log(props.indexProp);\r\n    api.getQuiz(props.indexProp)\r\n    .then(x => {\r\n      console.log(x);\r\n      if(x!=undefined){\r\n        return setQuiz(x)\r\n      }\r\n      else{\r\n        console.log(\"ceshicuowu\");\r\n        //window.location.replace(\"/login\")\r\n      }\r\n      });\r\n  },[]);\r\n  const {grade, setGrade} = useState(0);\r\n  const history = useHistory();\r\n  //alert(props.indexProp);\r\n  //alert(props.gradeProp);\r\n  let send = (event) => {\r\n    //event.preventDefault();\r\n    if(event.target.id==event.target.value){\r\n      props.getGrade(1);\r\n    }else{\r\n      props.getGrade(0);\r\n    }\r\n  }\r\n\r\n  let curr = [];\r\n  for(var i=0; i<quiz.length; i++){\r\n    curr.push(<div><Container fluid>\r\n        <Row \r\n          className=\"justify-content-center \r\n                      align-items-center\"\r\n        >\r\n          <Col>\r\n            <Image\r\n              src= {quiz[i].picture}\r\n              alt={quiz[i].answer}\r\n            />\r\n          </Col>\r\n          <Col>\r\n          <fieldset>\r\n            <Form>\r\n            <Form.Group as={Row} className=\"mb-3\">\r\n            <Form.Label as=\"legend\" column sm={2}>\r\n            </Form.Label>\r\n            <Col sm={10}>\r\n                <Form.Check\r\n                label={quiz[i].choices[0]} type ={'radio'} name=\"group1\" id ={quiz[i].choices[0]} value ={quiz[i].answer} onClick={send}\r\n                />\r\n                <Form.Check\r\n                label={quiz[i].choices[1]} type ={'radio'} name=\"group1\" id ={quiz[i].choices[1]} value ={quiz[i].answer}  onClick={send}\r\n                />\r\n                <Form.Check\r\n\r\n                label={quiz[i].choices[2]} type ={'radio'} name=\"group1\" id ={quiz[i].choices[2]} value ={quiz[i].answer}  onClick={send}\r\n                />\r\n                <Form.Control.Feedback label={quiz[i].answer}>You did it!</Form.Control.Feedback>\r\n            </Col>\r\n            </Form.Group>\r\n            </Form>\r\n        </fieldset>\r\n          </Col>\r\n        </Row>\r\n      </Container></div>);\r\n    }\r\n    //past.appendChild(curr);\r\n    curr.push(<Row><Alert key={\"info\"}>\r\n      Your grade is {props.gradeProp} \r\n    </Alert></Row>);\r\n    curr.push(<Row><Button variant=\"primary\" size=\"lg\">\r\n    Reapet same quiz\r\n  </Button>{' '}\r\n  <Button href=\"#\" variant=\"secondary\" size=\"lg\">\r\n    Go Back to do Others\r\n  </Button>{' '}</Row>);\r\n    return (\r\n        (curr)\r\n    );\r\n}\r\nexport default Questions;\r\n\r\n\r\n\r\n\r\n/*\r\nlet curr = [];\r\n        for(var i=0; i<quizzes.length; i++){\r\n            for(var j=0; j<quizzes[i].length; j++){\r\n                curr.push(<div><Container fluid>\r\n                    <Row \r\n                      className=\"justify-content-center \r\n                                 align-items-center\"\r\n                    >\r\n                      <Col>\r\n                        <Image\r\n                          src= {quizzes[i][j].picture}\r\n                          alt={quizzes[i][j].answer}\r\n                        />\r\n                      </Col>\r\n                      <Col>\r\n                      <fieldset>\r\n                        <Form.Group as={Row} className=\"mb-3\">\r\n                        <Form.Label as=\"legend\" column sm={2}>\r\n                        </Form.Label>\r\n                        <Col sm={10}>\r\n                            <Form.Check\r\n                            label={quizzes[i][j].choices[0]}\r\n                            />\r\n                            <Form.Check\r\n                            label={quizzes[i][j].choices[1]}\r\n                            />\r\n                            <Form.Check\r\n\r\n                            label={quizzes[i][j].choices[2]}\r\n                            />\r\n                        </Col>\r\n                        </Form.Group>\r\n                    </fieldset>\r\n                      </Col>\r\n                    </Row>\r\n                  </Container></div>);\r\n            }\r\n        }\r\n        //past.appendChild(curr);\r\n        \r\n        return (\r\n            (curr)\r\n        );\r\n*/\r\n\r\n/*\r\n    let curr = [];\r\n        for(var i=0; i<quizzes.length; i++){\r\n            for(var j=0; j<quizzes[i].length; j++){\r\n                curr.push(<Card >\r\n                    <Card.Img variant=\"top\"  src={quizzes[i][j].picture}/>\r\n                    <Card.Body>\r\n                        <Card.Title>{quizzes[i][j].answer}</Card.Title>\r\n                    </Card.Body>\r\n                    </Card>);\r\n            }\r\n        }\r\n        //past.appendChild(curr);\r\n        \r\n        return (\r\n            (curr)\r\n        );\r\n*/","//import logo from './logo.svg';\nimport Home from './components/Home';\nimport Signin from './components/Signup';\nimport Login from './components/Login';\nimport Menu from './components/Menu';\nimport Questions from './components/question';\nimport { useEffect, useState } from 'react';\n//import React from 'react';\nimport {\n  //BrowserRouter as router,\n  HashRouter,\n  Switch,\n  Route,\n  Redirect,\n  useParams,\n  useHistory\n  //Link\n}from \"react-router-dom\";\nimport { Container, Row, Col, Alert } from 'react-bootstrap';\n//import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport api from \"./communication/api\";\nfunction App() {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  let onCustomerAuthenticated = () => {\n    setIsAuthenticated(true);\n  }\n\n\n  const [number, setNumber] = useState(undefined);\n  const [grade, setGrade] = useState(0);\n  localStorage.setItem(\"customer\",undefined);  \n  let index = 0;\n\n  let getnumIndex = (picIndex) => {\n    setNumber(picIndex);\n    \n  }\n  let updateGrade = (Grade) => {\n    setGrade(grade+Grade);\n    //alert(grade);\n    \n  }\n  //alert(number);\n  return (\n    <HashRouter>\n      <Container>\n        <Row>\n          <Col><Menu customerAuthenticated={isAuthenticated} /></Col>\n        </Row>\n        <Switch>\n          <Route exact path='/twitter/:username/:name'>\n            <Twitter onAuthenticated={onCustomerAuthenticated}/>\n          </Route>\n          <Route path=\"/sign\">\n            <Signin />\n          </Route>\n          <Route path=\"/login\">\n            <Login onAuthenticated={onCustomerAuthenticated} />\n          </Route>\n          <PrivateRoute path=\"/question\">\n            <Questions indexProp={number} getGrade={updateGrade} gradeProp = {grade}/>\n          </PrivateRoute>\n          <Route path=\"/\">\n            <Home getIndex={getnumIndex} />\n          </Route>\n        </Switch>\n\n      </Container>\n    </HashRouter>\n  );\n}\n/*\nfunction Home(){\n  return <h2>Home</h2>\n}\nfunction Signin(){\n  return <h2>Signin</h2>\n}\nfunction Login(){\n  return <h2>Login</h2>\n}\n*/\nlet PrivateRoute = ({ children, ...rest }) => {\n  let customer = localStorage.getItem('customer');\n  console.log(customer==\"undefined\");\n  /*\n  if(customer==\"undefined\"){\n    window.location.replace(\"/login\")\n  }\n  */\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        customer!=\"undefined\" ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { from: location }\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n\nlet Twitter = (props) => {\n  let { username, name } = useParams();\n  let history = useHistory();\n  \n  useEffect(() => {\n    console.log('in Twitter ...');\n    api.verifyTwitter(username)\n      .then(x => {\n        console.log(x);\n        if (x.done) {\n          localStorage.setItem('customer', name);\n          props.onAuthenticated();\n        }\n      });\n  });\n  \n  \n  \n    return (\n      <Home />\n    );\n  }\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}